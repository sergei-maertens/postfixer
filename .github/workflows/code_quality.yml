name: Code quality checks

# Run this workflow every time a new commit pushed to your repository
on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

jobs:
  isort:
    name: Check import sorting
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up backend environment
        uses: maykinmedia/setup-django-backend@v1
        with:
          python-version: '3.10'
          setup-node: 'no'
      - uses: isort/isort-action@v1.1.0
        with:
          requirements-files: requirements/ci.txt
          sort-paths: 'src'
          configuration: '--check-only --diff'

  black:
    name: Check code formatting with black
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up backend environment
        uses: maykinmedia/setup-django-backend@v1
        with:
          apt-packages: 'libxml2-dev libxmlsec1-dev libxmlsec1-openssl'
          python-version: '3.10'
          setup-node: 'no'
      - name: Run black
        run: |
          black --check src

  # flake8:
  #   name: Code style (flake8)
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Set up backend environment
  #       uses: maykinmedia/setup-django-backend@v1
  #       with:
  #         apt-packages: 'libxml2-dev libxmlsec1-dev libxmlsec1-openssl'
  #         python-version: '3.10'
  #         setup-node: 'no'
  #     - name: Run flake8
  #       id: flake8
  #       run: |
  #         flake8 src 2>&1 | tee flake8_output.txt
  #         result_code=${PIPESTATUS[0]}
  #         report="$(cat flake8_output.txt)"
  #         report="${report//$'\n'/'%0A'}"  # escape newlines
  #         echo "::set-output name=flake8_output::${report}"
  #         exit $result_code
  #     - name: Emit flake8 flake8 output
  #       if: ${{ failure() }}
  #       run: |
  #         echo "${{ steps.flake8.outputs.flake8_output }}"

  #         echo 'flake8 found some issues' >> $GITHUB_STEP_SUMMARY
  #         echo '' >> $GITHUB_STEP_SUMMARY
  #         echo '| File | Line | Column | Issue |' >> $GITHUB_STEP_SUMMARY
  #         echo '| :--- | ---- | ------ | :---- |' >> $GITHUB_STEP_SUMMARY
  #         python ./bin/flake8_summary.py "${{ steps.flake8.outputs.flake8_output }}" >> $GITHUB_STEP_SUMMARY
